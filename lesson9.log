Практическое задание по теме “Транзакции, переменные, представления”
1. В базе данных shop и sample присутствуют одни и те же таблицы, учебной базы данных.
Переместите запись id = 1 из таблицы shop.users в таблицу sample.users. Используйте транзакции.

mysql> start transaction;
Query OK, 0 rows affected (0.00 sec)
mysql> insert into `sample`.`users` (`id`, `name`, `birthday_at`, `created_at`, `updated_at`) select `id`, `name`, `birthday_at`, `created_at`, `updated_at` from `shop`.`users` WHERE id=1;
Query OK, 1 row affected (0.00 sec)
Records: 1  Duplicates: 0  Warnings: 0
mysql> delete from `shop`.`users` where id =1;
Query OK, 1 row affected (0.00 sec)
mysql> commit;
Query OK, 0 rows affected (0.01 sec)

2. Создайте представление, которое выводит название name товарной позиции из таблицы products и соответствующее название каталога name из таблицы catalogs.
mysql> CREATE VIEW prod_vs_cat AS SELECT `products`.`name` as 'prod_name', `catalogs`.`name`  as 'type_name' FROM `products` JOIN `catalogs` ON `catalogs`.id = `products`.`catalog_id`;
Query OK, 0 rows affected (0.02 sec)

mysql> SELECT * FROM prod_vs_cat;
+-------------------------+-------------------+
| prod_name               | type_name         |
+-------------------------+-------------------+
| Intel Core i3-8100      | Процессоры        |
| Intel Core i5-7400      | Процессоры        |
| AMD FX-8320E            | Процессоры        |
| AMD FX-8320             | Процессоры        |
| ASUS ROG MAXIMUS X HERO | Материнские платы |
| Gigabyte H310M S2H      | Материнские платы |
| MSI B250M GAMING PRO    | Материнские платы |
+-------------------------+-------------------+
7 rows in set (0.07 sec)


Практическое задание по теме “Хранимые процедуры и функции, триггеры"
1. Создайте хранимую функцию hello(), которая будет возвращать приветствие, в зависимости от текущего времени суток.
С 6:00 до 12:00 функция должна возвращать фразу "Доброе утро", с 12:00 до 18:00 функция должна возвращать фразу
"Добрый день", с 18:00 до 00:00 — "Добрый вечер", с 00:00 до 6:00 — "Доброй ночи".
mysql> DELIMITER $$
mysql> CREATE PROCEDURE `hello1`()
    -> BEGIN
    -> DECLARE h INT;
    -> SET h = (SELECT DATE_FORMAT(NOW(), '%H'));
    -> SELECT CASE WHEN h >= 6 and h < 12 THEN 'Доброе утро' WHEN h >= 12 and h < 18 THEN 'Добрый день'  WHEN h >= 0 and h < 6 THEN 'Доброй ночи' ELSE 'Добрый вечер' END AS 'Приветствие';
    -> END$$
mysql> DELIMITER ;
mysql> CALL hello();
+--------------+
| Приветствие  |
+--------------+
| Добрый вечер |
+--------------+
1 row in set (0.09 sec)


2. В таблице products есть два текстовых поля: name с названием товара и description с его описанием.
Допустимо присутствие обоих полей или одно из них. Ситуация, когда оба поля принимают неопределенное значение NULL неприемлема.
Используя триггеры, добейтесь того, чтобы одно из этих полей или оба поля были заполнены.
При попытке присвоить полям NULL-значение необходимо отменить операцию.

mysql> DELIMITER $$
mysql> CREATE TRIGGER `empty_name_or_description` BEFORE INSERT ON products
    -> FOR EACH ROW
    -> BEGIN
    -> IF new.name IS NULL AND new.description IS NULL THEN
    -> SIGNAL sqlstate '45000';
    -> END IF;
    -> END;$$
Query OK, 0 rows affected (0.03 sec)
mysql> DELIMITER ;
mysql> INSERT INTO `products` (`name`, `price`, `catalog_id`, `created_at`, `updated_at`) value ('MSI B250M GAMING PRO', 1, 2, NOW(), NOW());
Query OK, 1 row affected (0.01 sec)

mysql> INSERT INTO `products` (`name`, `price`, `catalog_id`, `created_at`, `updated_at`) value (NULL, 1, 2, NOW(), NOW());
1644 - Unhandled user-defined exception condition
